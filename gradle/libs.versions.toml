[versions]
# main
aws = "2.34.5"
dagger = "2.57.2"
darc = "0.1.0"
dropwizard = "5.0.0"
guava = "33.5.0-jre"
immutables = "2.11.4"
jackson = "2.20.0"
jakartaAnnotation = "3.0.0"
jakartaValidation = "3.1.1"
jaxRs = "4.0.0"
jedis = "6.2.0"
retrofit = "3.0.0"

# test
assertj = "3.27.6"
junit = "5.13.4"

# plugin
plugins-dockerCompose = "0.17.12"
plugins-errorprone = "4.3.0"
plugins-openapi = "7.16.0"
plugins-spotless = "8.0.0"

# static analysis
errorprone = "2.42.0"
plugins-spotless-palantir = "2.75.0"

# Docker image
dockerImages-alpine = "3.22.1@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1"
dockerImages-dynamoDb = "3.1.0@sha256:7ef4a2c45b58c2901e70a4f28e0953a422c2c631baaaf5e2c15e0805740c7752"
dockerImages-redis = "8.2.1@sha256:5fa2edb1e408fa8235e6db8fab01d1afaaae96c9403ba67b70feceb8661e8621"
dockerImages-temurinJre = "21-jre-noble@sha256:a29160fa56fad2b32e3e605bd468a7bb280a096b1c2339a70a31752c3463ba20"

[libraries]
# main: BOMs
aws-bom = { module = "software.amazon.awssdk:bom", version.ref = "aws" }
dropwizard-bom = { module = "io.dropwizard:dropwizard-bom", version.ref = "dropwizard" }
immutables-bom = { module = "org.immutables:bom", version.ref = "immutables" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
retrofit-bom = { module = "com.squareup.retrofit2:retrofit-bom", version.ref = "retrofit" }

# main: libraries
aws-dynamoDb = { module = "software.amazon.awssdk:dynamodb" }
dagger-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
darc-darc = { module = "io.github.mikewacker.darc:darc", version.ref = "darc" }
dropwizard-core = { module = "io.dropwizard:dropwizard-core" }
guava-guava = { module = "com.google.guava:guava", version.ref = "guava" }
jedis-jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
immutables-annotations = { module = "org.immutables:value-annotations" }
jacksonCore-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations" }
jacksonCore-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jakartaAnnotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakartaAnnotation" }
jakartaValidation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartaValidation" }
jaxRs-api = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "jaxRs" }
retrofit-converterJackson = { module = "com.squareup.retrofit2:converter-jackson" }
retrofit-retrofit = { module = "com.squareup.retrofit2:retrofit" }

# main: annotation processors
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
immutables-value = { module = "org.immutables:value" }

# test: BOMs
assertj-bom = { module = "org.assertj:assertj-bom", version.ref = "assertj" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }

# test: libraries
assertj-core = { module = "org.assertj:assertj-core" }
dropwizard-jackson = { module = "io.dropwizard:dropwizard-jackson" }
dropwizard-jersey = { module = "io.dropwizard:dropwizard-jersey" }
dropwizard-testing = { module = "io.dropwizard:dropwizard-testing" }
guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "guava" }
junitJupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junitJupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junitPlatform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock" }

# plugin
pluginLibs-errorprone = { module = "net.ltgt.errorprone:net.ltgt.errorprone.gradle.plugin", version.ref = "plugins-errorprone" }
pluginLibs-openapi = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "plugins-openapi" }
pluginLibs-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "plugins-spotless" }

[plugins]
dockerCompose = { id = "com.avast.gradle.docker-compose", version.ref = "plugins-dockerCompose" }
