[versions]
# main
aws = "2.34.5"
dagger = "2.57.2"
darc = "0.1.0"
dropwizard = "5.0.0"
immutables = "2.11.4"
jackson = "2.20.0"
jakartaAnnotation = "3.0.0"
jakartaInject = "2.0.1"
jakartaValidation = "3.1.1"
jaxRs = "4.0.0"
jedis = "6.2.0"
okhttp = "5.1.0"
retrofit = "3.0.0"

# test
assertj = "3.27.6"
guava = "33.5.0-jre"
junitJupiter = "5.13.4"
junitPlatform = "1.13.4"

# plugin
plugins-dockerCompose = "0.17.12"
plugins-errorprone = "4.3.0"
plugins-openapi = "7.16.0"
plugins-spotless = "8.0.0"

# special
errorprone = "2.42.0"
plugins-spotless-palantir = "2.75.0"

[libraries]
# main (annotation processor)
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
immutables-value = { module = "org.immutables:value", version.ref = "immutables" }

# main
aws-dynamoDb = { module = "software.amazon.awssdk:dynamodb", version.ref = "aws" }
dagger-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
darc-darc = { module = "io.github.mikewacker.darc:darc", version.ref = "darc" }
dropwizard-core = { module = "io.dropwizard:dropwizard-core", version.ref = "dropwizard" }
jedis-jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
immutables-annotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jakartaAnnotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakartaAnnotation" }
jakartaInject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakartaInject" }
jakartaValidation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartaValidation" }
jaxRs-api = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "jaxRs" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit-converterJackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }
retrofit-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

# test
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
dropwizard-testing = { module = "io.dropwizard:dropwizard-testing", version.ref = "dropwizard" }
guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "guava" }
junitJupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junitJupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
junitPlatform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitPlatform" }
retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }

# plugin
pluginLibs-errorprone = { module = "net.ltgt.errorprone:net.ltgt.errorprone.gradle.plugin", version.ref = "plugins-errorprone" }
pluginLibs-openapi = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "plugins-openapi" }
pluginLibs-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "plugins-spotless" }

[plugins]
dockerCompose = { id = "com.avast.gradle.docker-compose", version.ref = "plugins-dockerCompose" }

[bundles]
# main
dagger = ["dagger-dagger", "jakartaInject-api"]
darc = ["darc-darc"]
dropwizard = ["dropwizard-core"]
dynamoDb = ["aws-dynamoDb"]
json = ["immutables-annotations", "jackson-databind", "jakartaAnnotation-api", "jakartaValidation-api"]
redis = ["jedis-jedis"]
retrofit = ["okhttp-okhttp", "retrofit-converterJackson", "retrofit-retrofit"]
